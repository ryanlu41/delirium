# -*- coding: utf-8 -*-
"""
Created on Thu Oct  1 15:19:44 2020

This takes the data generated by GetChartEventsDeliriumLabels.py, and uses it 
to generate labels and a dataset for all patients that might be relevant. In 
other words, had some sort of delirium testing done, and had an ICU stay of at
at least 12 hours. 

#Ends in 6,809 ICU stays.

Runtime: a few seconds.
@author: Kirby
"""
#%% Package setup and loading in data.
import pandas as pd
from pathlib import Path

file_path = Path(__file__)
mimic_path = file_path.parent.parent.parent.joinpath('mimic-iii-1.4')

del_chart_events = pd.read_csv('MIMIC_chart_events_delirium_labels.csv')
icustays = pd.read_csv(mimic_path.joinpath("ICUSTAYS.csv"),
                       usecols=['SUBJECT_ID', 'HADM_ID', 'ICUSTAY_ID',
                                'INTIME','OUTTIME','LOS'])

#%% Find if patients had delirium, and when they got it. 
del_chart_events = del_chart_events.dropna()
dataset = del_chart_events[['SUBJECT_ID', 'HADM_ID',
                            'ICUSTAY_ID','delirium_positive']].groupby([
                                'SUBJECT_ID', 'HADM_ID', 'ICUSTAY_ID']).max()

#Get delirium onset times.
del_onset = del_chart_events[['ICUSTAY_ID','CHARTTIME','delirium_positive']]
del_onset = del_onset[del_onset['delirium_positive']==1]
del_onset['CHARTTIME'] = pd.to_datetime(del_onset['CHARTTIME'])
del_onset = del_onset[['ICUSTAY_ID','CHARTTIME']]
del_onset = del_onset.groupby('ICUSTAY_ID').min()
del_onset.reset_index(inplace=True)
dataset = dataset.merge(del_onset,on='ICUSTAY_ID',how='left')

#%% Remove ICU stays where the patient wasn't in the ICU for at least 12 hours. 
dataset = dataset.merge(icustays,on='ICUSTAY_ID',how='left')
dataset = dataset[dataset['LOS']>=0.5]
#Calculate delirium onset time from discharge
dataset['INTIME'] = pd.to_datetime(dataset['INTIME'])
dataset['del_onset'] = dataset['CHARTTIME'] - dataset['INTIME']
#Put it into minutes.
dataset['del_onset'] = dataset.apply(
    lambda row: row['del_onset'].total_seconds()/60,axis=1)


#%% Rename columns, and save off the results.
dataset.rename(columns={'CHARTTIME':'del_onset_time'},inplace=True)
dataset.sort_values('ICUSTAY_ID',inplace=True)
dataset.to_csv('MIMIC_complete_dataset.csv',index=False)

#%% Find class balance
class_bal = dataset[['ICUSTAY_ID','delirium_positive']]
class_bal = class_bal.groupby('delirium_positive').count()
#5,314 (79.1%) negative to 1,495 (21.9%) positive.
#6,809 total